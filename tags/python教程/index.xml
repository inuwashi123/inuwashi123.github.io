<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python教程 on None - 记录在日本从事IT的所感所想。</title>
    <link>https://inuwashi123.github.io/tags/python%E6%95%99%E7%A8%8B/</link>
    <description>Recent content in python教程 on None - 记录在日本从事IT的所感所想。</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 14 Oct 2019 09:09:44 +0900</lastBuildDate>
    
	<atom:link href="https://inuwashi123.github.io/tags/python%E6%95%99%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python教程035 模块module 与 包package</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B035-%E6%A8%A1%E5%9D%97module-%E4%B8%8E-%E5%8C%85package/</link>
      <pubDate>Mon, 14 Oct 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B035-%E6%A8%A1%E5%9D%97module-%E4%B8%8E-%E5%8C%85package/</guid>
      <description>模块与包 除了交互式编写python代码在Python解释器执行之外，还可以将代码写入后缀为py的文件。然后通过python命令编译执行。py</description>
    </item>
    
    <item>
      <title>Python教程034 python内置函数3</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B034-python%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B03/</link>
      <pubDate>Sun, 13 Oct 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B034-python%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B03/</guid>
      <description>open() 用于打开一个文件，创建一个file对象，相关的方法才可以调用它进行读写。如果打开失败，返回OSError异常。 open(file, mode=&#39;r&#39;, buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None) 参数说明： file</description>
    </item>
    
    <item>
      <title>Python教程033 python内置函数2</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B033-python%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B02/</link>
      <pubDate>Sat, 12 Oct 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B033-python%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B02/</guid>
      <description>delattr(object, name) 删除对象的属性。delattr(x, &amp;lsquo;foobar&amp;rsquo;) 相当于del x.foobar dict() 用于创建一个字典。 dict函数语法： 1 2 3 dict(**kwarg) dict(mapping, **kwarg) dict(iterable, **kwarg) 参数说明： **kwargs &amp;ndash; 关键字参数。 mapping &amp;ndash;</description>
    </item>
    
    <item>
      <title>Python教程032 python内置函数1</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B032-python%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B01/</link>
      <pubDate>Fri, 11 Oct 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B032-python%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B01/</guid>
      <description>函数和方法 首先来区别下函数和方法概念。在其他语言中，函数和方法概念是一样的，python是有区别的。 函数：指的是第一个参数不是self的函数</description>
    </item>
    
    <item>
      <title>Python教程031 高阶函数</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B031-%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/</link>
      <pubDate>Thu, 10 Oct 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B031-%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/</guid>
      <description>高阶函数 函数可以接收另一个函数作为参数，称之为高阶函数。函数式编程就是指这种高度抽象的编程范式。 例如： 1 2 3 4 def add(x, y, f): return f(x) + f(y) add(-5, 6, abs) # 结果为</description>
    </item>
    
    <item>
      <title>Python教程030 生成器(generator)</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B030-%E7%94%9F%E6%88%90%E5%99%A8generator/</link>
      <pubDate>Wed, 09 Oct 2019 06:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B030-%E7%94%9F%E6%88%90%E5%99%A8generator/</guid>
      <description>生成器(generator) 生成器：是一种特殊的迭代器，生成器自动实现了“迭代器协议”（即iter和next方法），不需要再手动实现两方法。</description>
    </item>
    
    <item>
      <title>Python教程029 迭代器</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B029-%E8%BF%AD%E4%BB%A3%E5%99%A8/</link>
      <pubDate>Tue, 08 Oct 2019 06:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B029-%E8%BF%AD%E4%BB%A3%E5%99%A8/</guid>
      <description>迭代(Iteration),迭代器协议,迭代器(Iterator),可迭代对象(Iterable) 迭代(Iteration)：用简单的话讲，</description>
    </item>
    
    <item>
      <title>Python教程028 匿名函数</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B028-%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0/</link>
      <pubDate>Sat, 05 Oct 2019 06:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B028-%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0/</guid>
      <description>匿名函数 匿名函数语法: lambda x: expression python使用关键字lambda来创建匿名函数。冒号前面的x表示函数参数。匿名函数只能有一个表达式，不用写re</description>
    </item>
    
    <item>
      <title>Python教程027 闭包函数</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B027-%E9%97%AD%E5%8C%85%E5%87%BD%E6%95%B0/</link>
      <pubDate>Fri, 04 Oct 2019 06:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B027-%E9%97%AD%E5%8C%85%E5%87%BD%E6%95%B0/</guid>
      <description>闭包 函数闭包的概念在初学时容易迷糊，尤其涉及到闭包的作用域和参数问题。先看下维基百科对闭包的定义。 在计算机科学中，闭包（英语：Closure</description>
    </item>
    
    <item>
      <title>Python教程026 函数</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B026-%E5%87%BD%E6%95%B0/</link>
      <pubDate>Thu, 03 Oct 2019 06:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B026-%E5%87%BD%E6%95%B0/</guid>
      <description>函数 函数是组织好的，可重复使用的，用来实现单一，或相关联功能的一系列语句，它们向调用者返回一些值。它也可以传递零个或多个参数，这些参数可以用</description>
    </item>
    
    <item>
      <title>Python教程025 assert语句 pass语句 del语句 with语句</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B025-assert%E8%AF%AD%E5%8F%A5-pass%E8%AF%AD%E5%8F%A5-del%E8%AF%AD%E5%8F%A5-with%E8%AF%AD%E5%8F%A5/</link>
      <pubDate>Wed, 02 Oct 2019 06:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B025-assert%E8%AF%AD%E5%8F%A5-pass%E8%AF%AD%E5%8F%A5-del%E8%AF%AD%E5%8F%A5-with%E8%AF%AD%E5%8F%A5/</guid>
      <description>assert语句 用法： assert expression assert也称之为断言，用来测试表示式，其返回值为假，就会触发异常。为真时，啥也不做。 例如： 1 2 3 4 5 6 7 8 9 10</description>
    </item>
    
    <item>
      <title>Python教程024 if条件控制 while循环  for循环  break  continue</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B024-if%E6%9D%A1%E4%BB%B6%E6%8E%A7%E5%88%B6-while%E5%BE%AA%E7%8E%AF-for%E5%BE%AA%E7%8E%AF-break-continue/</link>
      <pubDate>Tue, 01 Oct 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B024-if%E6%9D%A1%E4%BB%B6%E6%8E%A7%E5%88%B6-while%E5%BE%AA%E7%8E%AF-for%E5%BE%AA%E7%8E%AF-break-continue/</guid>
      <description>if条件控制语句 if语句用于条件执行，一般形式如下所示： 1 2 3 4 5 6 if condition_1: statement_block_1 elif condition_2: statement_block_2 else: statement_block_3 如果 &amp;ldquo;condition_1&amp;rdquo; 为 True 将执行 &amp;ldquo;statement_block_1&amp;rdquo; 块语句 如果 &amp;ldquo;condition_1&amp;rdquo; 为False，将判断 &amp;ldquo;condition_2&amp;rdquo; 如果</description>
    </item>
    
    <item>
      <title>Python教程023 运算符优先级 三元运算符</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B023-%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7-%E4%B8%89%E5%85%83%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Sun, 29 Sep 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B023-%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7-%E4%B8%89%E5%85%83%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>运算符优先级(从低到高) 运算符 描述 lambda Lambda表达式 or 布尔“或” and 布尔“与” not 布尔“非” in，not in 成员测试 is，is not 同一性测试 &amp;lt</description>
    </item>
    
    <item>
      <title>Python教程022 逻辑运算符 位运算符 赋值运算符</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B022-%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6-%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6-%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Wed, 25 Sep 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B022-%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6-%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6-%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>逻辑运算符 运算符 描述 and 布尔&amp;rdquo;与&amp;rdquo;。如果x为False，x and y返回False，否则它返回y的计算值。 or 布尔&amp;rdquo</description>
    </item>
    
    <item>
      <title>Python教程021 算术运算符 比较运算符</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B021-%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6-%E6%AF%94%E8%BE%83%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Tue, 24 Sep 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B021-%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6-%E6%AF%94%E8%BE%83%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>算术运算符 运算符 描述 + 加 - 减 * 乘 / 除 // 取整除。返回商的整数部分。地板除。 % 取模，返回除法的余数 ** 幂运算。 例如： 1 2 3 4 5 6 7 8 9 10 x = 9 y =</description>
    </item>
    
    <item>
      <title>Python教程020 类型转换(二)</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B020-%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E4%BA%8C-str-list-tuple-set-dict/</link>
      <pubDate>Mon, 23 Sep 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B020-%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E4%BA%8C-str-list-tuple-set-dict/</guid>
      <description>str()强制类型转换 str(args)强制类型转换时，将调用参数对象args的自身str方法。通过后面的学习，我们将知道python的一切</description>
    </item>
    
    <item>
      <title>Python教程019 类型转换(一)</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B019-%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E4%B8%80-bool-int-bin-oct-hex-float/</link>
      <pubDate>Sun, 22 Sep 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B019-%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E4%B8%80-bool-int-bin-oct-hex-float/</guid>
      <description>类型转换 分为隐式类型转换和强制类型转换两种。 隐式类型转换 将一种类型的实例隐式转换为另一种类型的实例，也叫做自动类型转换。在 3 + 4.5 中，每个参数</description>
    </item>
    
    <item>
      <title>Python教程018 标准数据类型 字典视图对象</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B018-%E6%A0%87%E5%87%86%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-%E5%AD%97%E5%85%B8%E8%A7%86%E5%9B%BE%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Sat, 21 Sep 2019 09:10:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B018-%E6%A0%87%E5%87%86%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-%E5%AD%97%E5%85%B8%E8%A7%86%E5%9B%BE%E5%AF%B9%E8%B1%A1/</guid>
      <description>键视图对象 字典的keys()方法返回一个所有键集合的键视图对象。键视图的一个很少被了解的特性就是它们也支持集合操作，比如集合并、交、差运算。</description>
    </item>
    
    <item>
      <title>Python教程017 标准数据类型 字典dict</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B017-%E6%A0%87%E5%87%86%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-%E5%AD%97%E5%85%B8dict/</link>
      <pubDate>Fri, 20 Sep 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B017-%E6%A0%87%E5%87%86%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-%E5%AD%97%E5%85%B8dict/</guid>
      <description>字典dict定义 字典是一种映射类型，字典用{}标识，它是一个无序的键(key) : 值(value)的集合。 列表是有序的对象集合，字典是无序的对</description>
    </item>
    
    <item>
      <title>Python教程016 标准数据类型 集合set</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B016-%E6%A0%87%E5%87%86%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-%E9%9B%86%E5%90%88set/</link>
      <pubDate>Thu, 19 Sep 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B016-%E6%A0%87%E5%87%86%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-%E9%9B%86%E5%90%88set/</guid>
      <description>集合定义 set对象,也就是集合对象，是不同哈希对象的无序集合。构成集合的事物或对象称作元素或是成员。常见的用途包括成员资格测试、从序列中删除</description>
    </item>
    
    <item>
      <title>Python教程015 序列类型基本通用操作</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B015-sequence%E7%B1%BB%E5%9E%8B%E5%9F%BA%E6%9C%AC%E9%80%9A%E7%94%A8%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Wed, 18 Sep 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B015-sequence%E7%B1%BB%E5%9E%8B%E5%9F%BA%E6%9C%AC%E9%80%9A%E7%94%A8%E6%93%8D%E4%BD%9C/</guid>
      <description>序列类型(sequence)有六种： unicode sequences(str), byte sequences (bytes), byte arrays(bytearray objects), list, tuple, range objects。 sequence类型都支持的通用操作： 成员检查：in、not in 连接</description>
    </item>
    
    <item>
      <title>Python教程014 标准数据类型 range对象</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B014-%E6%A0%87%E5%87%86%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-range%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Tue, 17 Sep 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B014-%E6%A0%87%E5%87%86%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-range%E5%AF%B9%E8%B1%A1/</guid>
      <description>range对象定义 range类型表示一个不可变的数字序列，通常用于在for循环中,循环特定次数。range构造函数生成range对象。 ran</description>
    </item>
    
    <item>
      <title>Python教程013 标准数据类型 元组tuple</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B013-%E6%A0%87%E5%87%86%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-%E5%85%83%E7%BB%84tuple/</link>
      <pubDate>Mon, 16 Sep 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B013-%E6%A0%87%E5%87%86%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-%E5%85%83%E7%BB%84tuple/</guid>
      <description>元组定义 元组写在小括号()里，成员之间用逗号隔开。 元组可以用多种方式构建: 使用一对括号表示空元组: () 使用括号，用逗号分隔项目: (), (a, b, c) 使用类</description>
    </item>
    
    <item>
      <title>Python教程012 标准数据类型 列表list</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B012-%E6%A0%87%E5%87%86%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-%E5%88%97%E8%A1%A8list/</link>
      <pubDate>Sun, 15 Sep 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B012-%E6%A0%87%E5%87%86%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-%E5%88%97%E8%A1%A8list/</guid>
      <description>列表定义 列表是可变序列，通常用于存储数据的集合，是Python中使用最频繁的数据类型。 列表可以用多种方式构建: 使用一对方括号表示空列表: [] 使</description>
    </item>
    
    <item>
      <title>Python教程011 str类型 bytes类型 bytearray类型区别</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B011-str%E7%B1%BB%E5%9E%8B-bytes%E7%B1%BB%E5%9E%8B-bytearray%E7%B1%BB%E5%9E%8B%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Sat, 14 Sep 2019 08:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B011-str%E7%B1%BB%E5%9E%8B-bytes%E7%B1%BB%E5%9E%8B-bytearray%E7%B1%BB%E5%9E%8B%E5%8C%BA%E5%88%AB/</guid>
      <description>str类型和bytes类型区别 大多数情况下，str上的操作均可用于bytes。然而，这里也有一些需要注意的不同点。 python3对文本和二进</description>
    </item>
    
    <item>
      <title>Python教程010 bytearray对象</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B010-bytearray%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Fri, 13 Sep 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B010-bytearray%E5%AF%B9%E8%B1%A1/</guid>
      <description>bytearray对象类型 bytearray对象是与bytes对象相对应的可变对象。bytearray对象通过bytearray构造函数建立</description>
    </item>
    
    <item>
      <title>Python教程009 字节对象bytes</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B009-%E5%AD%97%E8%8A%82%E5%AF%B9%E8%B1%A1bytes/</link>
      <pubDate>Thu, 12 Sep 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B009-%E5%AD%97%E8%8A%82%E5%AF%B9%E8%B1%A1bytes/</guid>
      <description>字节对象bytes 字节对象bytes是单字节的不可变序列，用于存储和传输。字节对象语法与字符串对象语法基本相同，只是添加了b或B前缀。与字符</description>
    </item>
    
    <item>
      <title>Python教程008 标准数据类型 字符串str</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B008-%E6%A0%87%E5%87%86%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-%E5%AD%97%E7%AC%A6%E4%B8%B2str/</link>
      <pubDate>Tue, 10 Sep 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B008-%E6%A0%87%E5%87%86%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-%E5%AD%97%E7%AC%A6%E4%B8%B2str/</guid>
      <description>字符串定义 python中的文本数据是用字符串处理的。字符串是Unicode码位的不可变序列。 字符串文本的编写方式多种多样:可以用单引号 &amp;lsquo; 或双</description>
    </item>
    
    <item>
      <title>Python教程007 浮点运算</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B007-%E6%B5%AE%E7%82%B9%E8%BF%90%E7%AE%97/</link>
      <pubDate>Mon, 09 Sep 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B007-%E6%B5%AE%E7%82%B9%E8%BF%90%E7%AE%97/</guid>
      <description>浮点数在计算机硬件中表示为以2为基数（二进制）的小数。举例而言，十进制的小数0.125等于1/10 + 2&amp;frasl;100 + 5&amp;frasl;1000 ，同理，二进制的小数0.001等于</description>
    </item>
    
    <item>
      <title>Python教程006 数字number</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B006-%E6%95%B0%E5%AD%97number/</link>
      <pubDate>Sun, 08 Sep 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B006-%E6%95%B0%E5%AD%97number/</guid>
      <description>标准数据类型 Python3 中有六个标准的数据类型： Number（数字） String（字符串） List（列表） Tuple（元组） Set（集合） Dictio</description>
    </item>
    
    <item>
      <title>Python教程005 常量 Python内置常量</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B005-%E5%B8%B8%E9%87%8F-python%E5%86%85%E7%BD%AE%E5%B8%B8%E9%87%8F/</link>
      <pubDate>Sat, 07 Sep 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B005-%E5%B8%B8%E9%87%8F-python%E5%86%85%E7%BD%AE%E5%B8%B8%E9%87%8F/</guid>
      <description>常量 值不可以变化的量，即为常量。因为种种原因，Python并未提供如C，C++，Java一样的const修饰符来声明常量，换言之，Pytho</description>
    </item>
    
    <item>
      <title>Python教程004 变量</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B004-%E5%8F%98%E9%87%8F/</link>
      <pubDate>Fri, 06 Sep 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B004-%E5%8F%98%E9%87%8F/</guid>
      <description>什么是变量 用标识符命名的存储单元的地址称为变量，变量是用来存储数据的，通过标识符可以获取变量的值，也可以对变量进行赋值。对变量赋值的意思是将</description>
    </item>
    
    <item>
      <title>Python教程003 编码 缩进 标识符 保留字 注释 表达式 语句</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B003-%E7%BC%96%E7%A0%81-%E7%BC%A9%E8%BF%9B-%E6%A0%87%E8%AF%86%E7%AC%A6-%E4%BF%9D%E7%95%99%E5%AD%97-%E6%B3%A8%E9%87%8A-%E8%A1%A8%E8%BE%BE%E5%BC%8F-%E8%AF%AD%E5%8F%A5/</link>
      <pubDate>Thu, 05 Sep 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B003-%E7%BC%96%E7%A0%81-%E7%BC%A9%E8%BF%9B-%E6%A0%87%E8%AF%86%E7%AC%A6-%E4%BF%9D%E7%95%99%E5%AD%97-%E6%B3%A8%E9%87%8A-%E8%A1%A8%E8%BE%BE%E5%BC%8F-%E8%AF%AD%E5%8F%A5/</guid>
      <description>编码 默认情况下，Python 3源码文件以UTF-8编码，所有字符串都是unicode字符串。 当然也可以手动指定文件编码，有两种形式。 1 # -*- coding:</description>
    </item>
    
    <item>
      <title>Python教程002 Python环境搭建</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B002-python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Wed, 04 Sep 2019 09:09:44 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B002-python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
      <description>Windows下python环境搭建 访问Python的官方站点https://www.python.org/,点击Download，下载最新</description>
    </item>
    
    <item>
      <title>python教程001 关于Python</title>
      <link>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B001-%E5%85%B3%E4%BA%8Epython/</link>
      <pubDate>Tue, 03 Sep 2019 21:14:58 +0900</pubDate>
      
      <guid>https://inuwashi123.github.io/post/python/python%E6%95%99%E7%A8%8B001-%E5%85%B3%E4%BA%8Epython/</guid>
      <description>Python简介 Python是一种解释性、交互式、面向对象的编程语言。 它包含了模块、异常、动态类型、非常高层级的动态数据类型以及类的概念。 P</description>
    </item>
    
  </channel>
</rss>